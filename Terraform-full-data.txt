-------Docker-nginx-by---terraform----
terraform {
  required_providers {
    docker = {
      source  = "kreuzwerker/docker"
      version = "3.0.2"
    }
  }
}
provider "docker" {
  version = "~> 3.0.2"
  host    = "unix:///var/run/docker.sock"
}

# Pulls the image
resource "docker_image" "nginx" {
  name = "nginx:latest"
}

# Create a container
resource "docker_container" "foo" {
  image = docker_image.nginx.image_id
  name  = "foo"
  ports {
        internal = 80
        external = 80
}
}

-----------------------------------------------------
------main.tf---for test only---
resource "local_file" "sunday"{
        filename = "/home/ubuntu/terraformfulldata/abhi.txt"
        content = "I am super man"
}

resource "random_string" "rand_str" {
        length = 16
        special = true
        override_special = "!@#$%^&*(*"

}
output "rand_str" {
  value = random_string.rand_str[*].result
}

-----------------------------------------------------------
-------variables.tf-----

variable "filename" {
        default = "/home/ubuntu/terraformfulldata/sakalakaboom.txt"
}
variable "content" {
        default = "This is only for testing and automated"
}
variable "file_contents" {
        type = map
        default = {
        "state1" = "This is by 1"
        "state2" = "This is by state 2"
}
}

variable "devops" {
        type = object({
        name = string
        item = list(number)


})
        default = {
        name = "Rahul"
        item = [1,2,3,4]
}
}

----------------------------------------------------
----------prod.tf-------
resource "local_file" "boom" {
        filename = var.filename
        content = var.file_contents.state2
}


resource "local_file" "booom" {
        filename = var.devops.name
        content = var.file_contents.state1
}
output "dev-out" {
value = var.devops.name
}

output "dev-item" {
value = var.devops.item
}
---------------------------------------------------
---------AWS-Terraform-EC2 and S3--------------
terraform {
        required_providers {
        aws = {
        source  = "hashicorp/aws"
        version = "~> 4.16"
}
}
required_version = ">= 1.2.0"
}

provider "aws" {
        region = "us-east-1"

}

resource "aws_instance" "my_ec2_instance" {
        count = 2
        ami = "ami-007855ac798b5175e"
        instance_type = "t2.micro"
        tags = {
                Name = "TerraformBatch"
}
}

resource "aws_s3_bucket" "my_s3_bucket" {
        bucket = "babubhaiya-bucket"
        tags = {
    Name        = "babubhaiya-bucket"
    Environment = "Dev"
  }

}

output "ec2_instance_ips" {
        value = aws_instance.my_ec2_instance[*].public_ip
}

